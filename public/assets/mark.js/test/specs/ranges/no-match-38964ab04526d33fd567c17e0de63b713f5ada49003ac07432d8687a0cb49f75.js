"use strict";describe("mark with range no matches",function(){var t,n,a,e,r;beforeEach(function(o){loadFixtures("ranges/no-match.html"),e=0,r=[],t=$(".ranges-no-match > div:nth-child(1)"),n=$(".ranges-no-match > div:nth-child(2)"),a=$(".ranges-no-match > div:nth-child(3)"),new Mark(t[0]).markRanges([{start:-20,length:-12},{start:0,length:3},{start:30,length:5},{start:1500,length:500}],{noMatch:function(t){r=r.concat(t)},done:function(){new Mark(n[0]).markRanges([{start:-8,length:5},{start:-1,length:20}],{noMatch:function(t){r=r.concat(t)},done:function(){new Mark(a[0]).markRanges([{start:99,length:9999}],{each:function(t,n){$(t).attr({"data-range-start":n.start,"data-range-length":n.length})},noMatch:function(t){r=r.concat(t)},done:function(){new Mark(a[0]).markRanges(["pie"],{noMatch:function(t){e++,r=r.concat(t)},done:o})}})}})}})}),it("should report each range non-match",function(){expect(t.find("mark")).toHaveLength(1),expect(n.find("mark")).toHaveLength(0);var a=r.sort(function(t,n){return t[0]-n[0]});expect(JSON.stringify(a)).toEqual(JSON.stringify([{start:-20,length:-12},{start:0,length:3},{start:1500,length:500},{start:-8,length:5},{start:-1,length:20},"pie"])),expect(e).toBe(1)}),it("should allow out of range max",function(){var t=a.find("mark");expect(t).toHaveLength(2),expect(t.attr("data-range-start")).toBe("99"),expect(t.attr("data-range-length")).toBe("9999")})});